plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
    id 'org.jetbrains.kotlin.android'
}

android {
     namespace "com.example.agora_test_app"
    compileSdk flutter.compileSdkVersion
    ndkVersion "27.0.12077973"
    
    packagingOptions {
        pickFirst 'lib/**/libc++_shared.so'
        pickFirst 'lib/**/libagora-rtc-sdk-jni.so'
        pickFirst 'lib/**/libagora-rtm-sdk-jni.so'
        pickFirst 'lib/arm64-v8a/libaosl.so'
        pickFirst 'lib/armeabi-v7a/libaosl.so'
        pickFirst 'lib/x86/libaosl.so'
        pickFirst 'lib/x86_64/libaosl.so'
        pickFirst 'lib/**/libagora-*.so'
        exclude 'lib/**/libaosl.so'
        exclude 'lib/arm64-v8a/libaosl.so'
        pickFirst 'lib/**/libagora-rtc-sdk.so'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    defaultConfig {
     applicationId "com.example.agora_test_app"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }
        minSdk flutter.minSdkVersion
        targetSdk flutter.targetSdkVersion
        versionCode flutter.versionCode
        versionName flutter.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'io.agora.infra:aosl:1.2.13'

    def devFile = project.file("${rootProject.projectDir.getParentFile().parentFile.parentFile}/android/.plugin_dev")
    if (devFile.exists()) {
        implementation fileTree(dir: "${rootProject.projectDir.getParentFile().parentFile.parentFile}/android/libs", include: ["*.aar"])
    }
   // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}